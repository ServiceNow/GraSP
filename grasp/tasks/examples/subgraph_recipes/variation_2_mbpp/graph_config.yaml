graph_config:
  nodes:
    persona_sampler:
      node_type: weighted_sampler
      attributes:
        num_turns:
          values: [ 2, 3, 4, 5 ]
        tone1:
          values: [ professional, casual, friendly, inquisitive, formal, neutral, humorous, empathetic, enthusiastic, supportive, encouraging, optimistic, pessimistic, sarcastic, serious, urgent, relaxed, impatient, polite, apologetic, confident, uncertain, direct, indirect, assertive, passive, aggressive, rude, impolite ]
        tone2:
          values: [ professional, casual, friendly, inquisitive, formal, neutral, humorous, empathetic, enthusiastic, supportive, encouraging, optimistic, serious, relaxed, polite, apologetic, confident, direct, indirect, assertive, passive ]
        persona1:
          values: [ high school teacher, college professor, software engineer, software engineering manager, physicist, college student, high school student ]
        persona2:
          values: [ high school teacher, college professor, software engineer, software engineering manager, physicist, college student, high school student ]
    paraphrase_question:  
      node_type: llm        
      output_keys: rephrased_text
      prompt:
        - system: |
            Assume you are {persona1} persona.
            You are an assistant tasked with paraphrasing a user question. Make sure all the relevant details are preserved in the paraphrased question. Do NOT generate any conversational text and respond ONLY with the paraphrased question in the following format: "PARAPHRASED QUESTION: <question>"
        - user: |
            QUESTION: {prompt}. Write the program in python.      
      model:      
        name: gpt4o
        parameters:          
          temperature: 1.0
    generate_answer:  
      node_type: subgraph
      subgraph: grasp.tasks.examples.subgraph_recipes.subgraphs.generate_answer
        
    critique_answer:
      pre_process: grasp.tasks.examples.subgraph_recipes.variation_2_mbpp.task_executor.critique_answer_node_pre_process
      node_type: llm 
      output_role: user 
      prompt:        
        - system: |              
            You are a teacher grading a solution to a python coding problem. Generate critique and recommendations for the user's submission by using the provided test cases to ensure that the user provided solution is correct. Instructions:
            1. If the answer, including all the steps, is correct, respond with 'NO MORE FEEDBACK'. Respond with 'NO MORE FEEDBACK' ONLY after the user has corrected all the steps. DO NOT say 'NO MORE FEEDBACK' until user provided solution is completely correct. 
            2. Do NOT provide the complete answer to the problem. Only provide useful feedback to help the user improve their solution.            
            3. Address the user in second person using 'you' and 'your'.
            
            QUESTION: {prompt}            

            TEST CASES: {test_list}
      model:      
        name: gpt4o
        parameters:          
          temperature: 1.0

  edges:
    - from: START
      to: persona_sampler
    - from: persona_sampler
      to: paraphrase_question
    - from: paraphrase_question
      to: generate_answer
    - from: generate_answer
      to: critique_answer
    - from: critique_answer
      condition: grasp.tasks.examples.subgraph_recipes.variation_2_mbpp.task_executor.should_continue
      path_map:
        END: END
        generate_answer: generate_answer




